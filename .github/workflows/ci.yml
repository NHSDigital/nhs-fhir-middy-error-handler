name: CI Quality Checks

on:
  push:
    branches: [main]

jobs:
  quality_checks:
    uses: NHSDigital/eps-workflow-quality-checks/.github/workflows/quality-checks.yml@v4.1.0
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  tag_release:
    needs: quality_checks
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ env.BRANCH_NAME }}
          fetch-depth: 0

      # using git commit sha for version of action to ensure we have stable version
      - name: Install asdf
        uses: asdf-vm/actions/setup@1902764435ca0dd2f3388eea723a4f92a4eb8302
        with:
          asdf_branch: v0.11.3
  
      - name: Cache asdf
        uses: actions/cache@v4
        with:
          path: |
            ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-

      - name: Install asdf dependencies in .tool-versions
        uses: asdf-vm/actions/install@1902764435ca0dd2f3388eea723a4f92a4eb8302
        with:
          asdf_branch: v0.11.3
        env:
          PYTHON_CONFIGURE_OPTS: --enable-shared 
  
      - name: Install node packages
        run: |
          make install-node

      - name: Set VERSION_TAG env var to be short git SHA and get next tag varsion
        id: output_version_tag
        run: |
          VERSION_TAG=$(git rev-parse --short HEAD)
          npx semantic-release --dry-run > semantic-release-output.log
          NEXT_VERSION=$(grep -i 'The next release version is' semantic-release-output.log | sed -E 's/.* ([[:digit:].]+)$/\1/')
          if [ -z "${NEXT_VERSION}" ]
          then
            echo "Could not get next tag. Here is the log from semantic-release"
            cat semantic-release-output.log
            exit 1
          fi
          tagFormat=$(node -e "const config=require('./release.config.cjs'); console.log(config.tagFormat)")
          if [ "${tagFormat}" = "null" ]
          then
            tagFormat="v\${version}"
          fi
          # disabling shellcheck as replace does not work
          # shellcheck disable=SC2001
          NEW_VERSION_TAG=$(echo "$tagFormat" | sed "s/\${version}/$NEXT_VERSION/")
          echo "## VERSION TAG : ${VERSION_TAG}" >> "$GITHUB_STEP_SUMMARY"
          echo "## NEXT TAG WILL BE : ${NEW_VERSION_TAG}" >> "$GITHUB_STEP_SUMMARY"
          echo "VERSION_TAG=${VERSION_TAG}" >> "$GITHUB_OUTPUT"
          echo "VERSION_TAG=${VERSION_TAG}" >> "$GITHUB_ENV"
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
